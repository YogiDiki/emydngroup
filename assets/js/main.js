// ====== Logika Awal Mobile Menu & Chatbot (Harus Didefinisikan Global) ======
const chatbotBtn = document.getElementById('chatbot-btn');
const chatbotModal = document.getElementById('chatbot-modal');
const closeChatbot = document.getElementById('close-chatbot');
const sendChat = document.getElementById('send-chat');
const chatInput = document.getElementById('chat-input');
const chatMessages = document.getElementById('chat-messages');

// === Fungsionalitas Chatbot (Ditempatkan di sini untuk akses global) ===
const botResponses = {
Â  Â  'halo': 'Halo! Senang bertemu dengan Anda. Ada yang bisa saya bantu?',
Â  Â  'hai': 'Hai! Ada yang ingin Anda tanyakan tentang Emydn Group?',
Â  Â  'bisnis': 'Kami memiliki 4 lini bisnis: Sistem & Aplikasi, Edukasi, Esport, dan F&B. Mana yang ingin Anda ketahui lebih lanjut?',
Â  Â  'sistem': 'Lini bisnis Sistem & Aplikasi kami fokus pada pengembangan software, aplikasi mobile, dan sistem enterprise. Silakan kunjungi halaman Bisnis Kami untuk info lengkap!',
Â  Â  'edukasi': 'Kami menyediakan platform pembelajaran online dan pelatihan profesional. Kunjungi halaman Bisnis Kami untuk mengetahui lebih lanjut!',
Â  Â  'esport': 'Divisi Esport kami mengelola tim profesional dan menyelenggarakan turnamen. Tertarik bergabung?',
Â  Â  'fnb': 'Bisnis F&B kami menawarkan konsep kuliner modern dan inovatif. Cek halaman Bisnis Kami untuk detail!',
Â  Â  'kontak': 'Anda bisa menghubungi kami melalui WhatsApp di +62 858-1967-2814 atau email di emydngroup@gmail.com',
Â  Â  'alamat': 'Kantor kami berlokasi di Jakarta, Indonesia. Untuk informasi lebih lanjut, kunjungi halaman Kontak.',
Â  Â  'terima kasih': 'Sama-sama! Senang bisa membantu Anda ðŸ˜Š',
Â  Â  'default': 'Maaf, saya belum mengerti pertanyaan Anda. Silakan hubungi tim kami melalui WhatsApp atau halaman Kontak untuk bantuan lebih lanjut.'
};

function getBotResponse(message) {
Â  Â  const lowerMessage = message.toLowerCase();
Â  Â  for (let key in botResponses) {
Â  Â  Â  Â  if (lowerMessage.includes(key)) {
Â  Â  Â  Â  Â  Â  return botResponses[key];
Â  Â  Â  Â  }
Â  Â  }
Â  Â  return botResponses['default'];
}

function addMessage(text, isUser = false) {
Â  Â  const messageDiv = document.createElement('div');
Â  Â  messageDiv.className = `mb-4 ${isUser ? 'text-right' : 'text-left'}`;
Â  Â  
Â  Â  const messageContent = document.createElement('p');
Â  Â  messageContent.className = `inline-block p-3 rounded-lg max-w-[80%] ${
Â  Â  Â  Â  isUser ? 'bg-primary text-white' : 'bg-gray-100 text-gray-800'
Â  Â  }`;
Â  Â  messageContent.textContent = text;
Â  Â  
Â  Â  messageDiv.appendChild(messageContent);
Â  Â  chatMessages.appendChild(messageDiv);
Â  Â  chatMessages.scrollTop = chatMessages.scrollHeight;
}

window.sendMessage = function() { // Gunakan window.sendMessage agar bisa diakses dari HTML
Â  Â  const message = chatInput.value.trim();
Â  Â  if (message) {
Â  Â  Â  Â  addMessage(message, true);
Â  Â  Â  Â  chatInput.value = '';
Â  Â  Â  Â  
Â  Â  Â  Â  setTimeout(() => {
Â  Â  Â  Â  Â  Â  const response = getBotResponse(message);
Â  Â  Â  Â  Â  Â  addMessage(response, false);
Â  Â  Â  Â  }, 500);
Â  Â  }
}
// ---------------------------------------------------------------------------


// Fungsionalitas Pencarian Internal (Diambil dari Include.js sebelumnya)
window.handleInternalSearch = function(inputId) {
Â  Â  const query = document.getElementById(inputId).value.trim().toLowerCase();

Â  Â  if (!query) return;

Â  Â  // Logika Pencarian
Â  Â  if (query.includes('makan') || query.includes('food') || query.includes('f&b')) {
Â  Â  Â  Â  window.location.href = '/business/fnb.html';
Â  Â  } else if (query.includes('edukasi') || query.includes('belajar') || query.includes('education')) {
Â  Â  Â  Â  window.location.href = '/business/education.html';
Â  Â  } else if (query.includes('sistem') || query.includes('aplikasi') || query.includes('system') || query.includes('website')) {
Â  Â  Â  Â  window.location.href = '/business/system.html';
Â  Â  } else if (query.includes('esport') || query.includes('game')) {
Â  Â  Â  Â  window.location.href = '/business/esport.html';
Â  Â  } else if (query.includes('kontak') || query.includes('hubungi')) {
Â  Â  Â  Â  window.location.href = '/contact.html';
Â  Â  } else if (query.includes('tentang') || query.includes('about')) {
Â  Â  Â  Â  window.location.href = '/about.html';
Â  Â  } else if (query.includes('bisnis') || query.includes('line of business') || query.includes('lob')) {
Â  Â  Â  Â  window.location.href = '/line-of-business.html';
Â  Â  } else {
Â  Â  Â  Â  alert('Hasil pencarian tidak ditemukan. Coba kata kunci yang lebih umum.');
Â  Â  }

Â  Â  // Tutup menu mobile setelah pencarian
Â  Â  const mobileMenu = document.getElementById('mobileMenu');
Â  Â  const menuIcon = document.getElementById('menu-icon');
Â  Â  if (mobileMenu && menuIcon) {
Â  Â  Â  Â  mobileMenu.classList.add('hidden');
Â  Â  Â  Â  menuIcon.classList.remove('fa-times');
Â  Â  Â  Â  menuIcon.classList.add('fa-bars');
Â  Â  }
}

// === Fungsi Utama yang Dijalankan Setelah DOM Dimuat ===
document.addEventListener('DOMContentLoaded', () => {

Â  Â  // --- 1. Load Header & Footer (Menggunakan Promise.all untuk memastikan keduanya selesai) ---
Â  Â  Promise.all([
Â  Â  Â  Â  fetch('/partials/header.html').then(response => response.text()),
Â  Â  Â  Â  fetch('/partials/footer.html').then(response => response.text())
Â  Â  ])
Â  Â  .then(([headerData, footerData]) => {
Â  Â  Â  Â  // Isi kontainer
Â  Â  Â  Â  document.getElementById('header').innerHTML = headerData;
Â  Â  Â  Â  document.getElementById('footer').innerHTML = footerData;

Â  Â  Â  Â  // Panggil fungsi inisiasi header setelah elemen ada
Â  Â  Â  Â  initHeaderFunctionality();
Â  Â  })
Â  Â  .catch(error => console.error('Gagal memuat partials:', error));


Â  Â  // --- 2. Inisiasi Smooth Scroll (Tidak Perlu Diubah) ---
Â  Â  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
Â  Â  Â  Â  anchor.addEventListener('click', function (e) {
Â  Â  Â  Â  Â  Â  e.preventDefault();
Â  Â  Â  Â  Â  Â  const target = document.querySelector(this.getAttribute('href'));
Â  Â  Â  Â  Â  Â  if (target) {
Â  Â  Â  Â  Â  Â  Â  Â  // Menggunakan scrollIntoView yang lebih modern
Â  Â  Â  Â  Â  Â  Â  Â  target.scrollIntoView({ behavior: 'smooth', block: 'start' });
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  });
Â  Â  });


Â  Â  // --- 3. Inisiasi Chatbot (Ditempatkan di sini) ---
Â  Â  if (chatbotBtn) {
Â  Â  Â  Â  chatbotBtn.addEventListener('click', () => {
Â  Â  Â  Â  Â  Â  chatbotModal.classList.toggle('hidden');
Â  Â  Â  Â  Â  Â  if (!chatbotModal.classList.contains('hidden')) {
Â  Â  Â  Â  Â  Â  Â  Â  // Opsional: Tambahkan salam pembuka awal jika chat kosong
Â  Â  Â  Â  Â  Â  Â  Â  if (chatMessages && chatMessages.children.length === 0) {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  addMessage(botResponses['halo'], false);
Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  chatInput.focus();
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  });
Â  Â  }
Â  Â  if (closeChatbot) {
Â  Â  Â  Â  closeChatbot.addEventListener('click', () => {
Â  Â  Â  Â  Â  Â  chatbotModal.classList.add('hidden');
Â  Â  Â  Â  });
Â  Â  }
Â  Â  if (sendChat) {
Â  Â  Â  Â  sendChat.addEventListener('click', sendMessage);
Â  Â  }
Â  Â  if (chatInput) {
Â  Â  Â  Â  chatInput.addEventListener('keypress', (e) => {
Â  Â  Â  Â  Â  Â  if (e.key === 'Enter') {
Â  Â  Â  Â  Â  Â  Â  Â  sendMessage();
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  });
Â  Â  }


Â  Â  // --- 4. Animation on Scroll (Tidak Perlu Diubah) ---
Â  Â  const observerOptions = {
Â  Â  Â  Â  threshold: 0.1,
Â  Â  Â  Â  rootMargin: '0px 0px -50px 0px'
Â  Â  };
Â  Â  const observer = new IntersectionObserver((entries) => {
Â  Â  Â  Â  entries.forEach(entry => {
Â  Â  Â  Â  Â  Â  if (entry.isIntersecting) {
Â  Â  Â  Â  Â  Â  Â  Â  entry.target.style.opacity = '1';
Â  Â  Â  Â  Â  Â  Â  Â  entry.target.style.transform = 'translateY(0)';
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  });
Â  Â  }, observerOptions);

Â  Â  const animatedElements = document.querySelectorAll('section > div');
Â  Â  animatedElements.forEach(el => {
Â  Â  Â  Â  el.style.opacity = '0';
Â  Â  Â  Â  el.style.transform = 'translateY(20px)';
Â  Â  Â  Â  el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
Â  Â  Â  Â  observer.observe(el);
Â  Â  });

Â  Â  // --- 5. Scroll to Top Button (Tidak Perlu Diubah) ---
Â  Â  window.addEventListener('scroll', () => {
Â  Â  Â  Â  if (window.scrollY > 300) {
Â  Â  Â  Â  Â  Â  document.body.classList.add('scrolled');
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  document.body.classList.remove('scrolled');
Â  Â  Â  Â  }
Â  Â  });
});


// === Fungsionalitas Header yang Terpisah (Diperlukan karena header di-load asinkron) ===
function initHeaderFunctionality() {
Â  Â  const menuBtn = document.getElementById('menu-btn');
Â  Â  const mobileMenu = document.getElementById('mobileMenu');
Â  Â  const menuIcon = document.getElementById('menu-icon');

Â  Â  // 1. Toggle Menu Mobile
Â  Â  if (menuBtn && mobileMenu && menuIcon) {
Â  Â  Â  Â  menuBtn.addEventListener('click', () => {
Â  Â  Â  Â  Â  Â  mobileMenu.classList.toggle('hidden');
Â  Â  Â  Â  Â  Â  if (mobileMenu.classList.contains('hidden')) {
Â  Â  Â  Â  Â  Â  Â  Â  menuIcon.classList.remove('fa-times');
Â  Â  Â  Â  Â  Â  Â  Â  menuIcon.classList.add('fa-bars');
Â  Â  Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  Â  Â  menuIcon.classList.remove('fa-bars');
Â  Â  Â  Â  Â  Â  Â  Â  menuIcon.classList.add('fa-times');
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  });

Â  Â  Â  Â  // Tutup menu mobile saat klik link
Â  Â  Â  Â  mobileMenu.querySelectorAll('a').forEach(link => {
Â  Â  Â  Â  Â  Â  link.addEventListener('click', () => {
Â  Â  Â  Â  Â  Â  Â  Â  mobileMenu.classList.add('hidden');
Â  Â  Â  Â  Â  Â  Â  Â  menuIcon.classList.remove('fa-times');
Â  Â  Â  Â  Â  Â  Â  Â  menuIcon.classList.add('fa-bars');
Â  Â  Â  Â  Â  Â  });
Â  Â  Â  Â  });
Â  Â  }

Â  Â  // 2. Fungsionalitas Tombol Search
Â  Â  const searchBtn = document.getElementById('searchBtn');
Â  Â  const searchBtnMobile = document.getElementById('searchBtnMobile');
Â  Â  
Â  Â  if (searchBtn) {
Â  Â  Â  Â  searchBtn.addEventListener('click', () => handleInternalSearch('searchInput'));
Â  Â  }
Â  Â  if (searchBtnMobile) {
Â  Â  Â  Â  searchBtnMobile.addEventListener('click', () => handleInternalSearch('searchInputMobile'));
Â  Â  }
}